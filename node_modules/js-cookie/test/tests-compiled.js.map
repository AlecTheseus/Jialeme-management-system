{"version":3,"sources":["tests.js"],"names":[],"mappings":"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","file":"tests-compiled.js","sourcesContent":["'use strict';\n\n/*global lifecycle: true*/\n\nQUnit.module('read', lifecycle);\n\nQUnit.test('simple value', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'c=v';\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should return value');\n});\n\nQUnit.test('empty value', function (assert) {\n\tassert.expect(1);\n\t// IE saves cookies with empty string as \"c; \", e.g. without \"=\" as opposed to EOMB, which\n\t// resulted in a bug while reading such a cookie.\n\tCookies.set('c', '');\n\tassert.strictEqual(Cookies.get('c'), '', 'should return value');\n});\n\nQUnit.test('not existing', function (assert) {\n\tassert.expect(1);\n\tassert.strictEqual(Cookies.get('whatever'), undefined, 'return undefined');\n});\n\n// github.com/carhartl/jquery-cookie/issues/50\nQUnit.test('equality sign in cookie value', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', 'foo=bar');\n\tassert.strictEqual(Cookies.get('c'), 'foo=bar', 'should include the entire value');\n});\n\n// github.com/carhartl/jquery-cookie/issues/215\nQUnit.test('percent character in cookie value', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'bad=foo%';\n\tassert.strictEqual(Cookies.get('bad'), 'foo%', 'should read the percent character');\n});\n\nQUnit.test('percent character in cookie value mixed with encoded values', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'bad=foo%bar%22baz%bax%3D';\n\tassert.strictEqual(Cookies.get('bad'), 'foo%bar\"baz%bax=', 'should read the percent character');\n});\n\n// github.com/carhartl/jquery-cookie/pull/88\n// github.com/carhartl/jquery-cookie/pull/117\nQUnit.test('malformed cookie value in IE', function (assert) {\n\tassert.expect(1);\n\tvar done = assert.async();\n\t// Sandbox in an iframe so that we can poke around with document.cookie.\n\tvar iframe = document.createElement('iframe');\n\tiframe.src = 'malformed_cookie.html';\n\taddEvent(iframe, 'load', function () {\n\t\tif (iframe.contentWindow.ok) {\n\t\t\tassert.strictEqual(iframe.contentWindow.testValue, 'two', 'reads all cookie values, skipping duplicate occurences of \"; \"');\n\t\t} else {\n\t\t\t// Skip the test where we can't stub document.cookie using\n\t\t\t// Object.defineProperty. Seems to work fine in\n\t\t\t// Chrome, Firefox and IE 8+.\n\t\t\tassert.ok(true, 'N/A');\n\t\t}\n\t\tdone();\n\t});\n\tdocument.body.appendChild(iframe);\n});\n\n// github.com/js-cookie/js-cookie/pull/171\nQUnit.test('missing leading semicolon', function (assert) {\n\tassert.expect(1);\n\tvar done = assert.async();\n\t// Sandbox in an iframe so that we can poke around with document.cookie.\n\tvar iframe = document.createElement('iframe');\n\tvar loadedSuccessfully = true;\n\tiframe.src = 'missing_semicolon.html';\n\n\taddEvent(iframe, 'load', function () {\n\t\tiframe.contentWindow.onerror = function () {\n\t\t\tloadedSuccessfully = false;\n\t\t};\n\t\tassert.strictEqual(loadedSuccessfully, true, 'can\\'t throw Object is not a function error');\n\t\tdone();\n\t});\n\tdocument.body.appendChild(iframe);\n});\n\nQUnit.test('Call to read all when there are cookies', function (assert) {\n\tCookies.set('c', 'v');\n\tCookies.set('foo', 'bar');\n\tassert.deepEqual(Cookies.get(), { c: 'v', foo: 'bar' }, 'returns object containing all cookies');\n});\n\nQUnit.test('Call to read all when there are no cookies at all', function (assert) {\n\tassert.deepEqual(Cookies.get(), {}, 'returns empty object');\n});\n\nQUnit.test('RFC 6265 - reading cookie-octet enclosed in DQUOTE', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'c=\"v\"';\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should simply ignore quoted strings');\n});\n\n// github.com/js-cookie/js-cookie/issues/196\nQUnit.test('Call to read cookie when there is another unrelated cookie with malformed encoding in the name', function (assert) {\n\tassert.expect(2);\n\tdocument.cookie = 'BS%BS=1';\n\tdocument.cookie = 'c=v';\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should not throw a URI malformed exception when retrieving a single cookie');\n\tassert.deepEqual(Cookies.get(), { c: 'v' }, 'should not throw a URI malformed exception when retrieving all cookies');\n\tdocument.cookie = 'BS%BS=1; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n});\n\n// github.com/js-cookie/js-cookie/pull/62\nQUnit.test('Call to read cookie when there is another unrelated cookie with malformed encoding in the value', function (assert) {\n\tassert.expect(2);\n\tdocument.cookie = 'invalid=%A1';\n\tdocument.cookie = 'c=v';\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should not throw a URI malformed exception when retrieving a single cookie');\n\tassert.deepEqual(Cookies.get(), { c: 'v' }, 'should not throw a URI malformed exception when retrieving all cookies');\n\tCookies.withConverter(unescape).remove('invalid');\n});\n\n// github.com/js-cookie/js-cookie/issues/145\nQUnit.test('Call to read cookie when passing an Object Literal as the second argument', function (assert) {\n\tassert.expect(1);\n\tCookies.get('name', { path: '' });\n\tassert.strictEqual(document.cookie, '', 'should not create a cookie');\n});\n\n// github.com/js-cookie/js-cookie/issues/238\nQUnit.test('Call to read cookie when there is a window.json variable globally', function (assert) {\n\tassert.expect(1);\n\twindow.json = true;\n\tCookies.set('boolean', true);\n\tassert.strictEqual(typeof Cookies.get('boolean'), 'string', 'should not change the returned type');\n\t// IE 6-8 throw an exception if trying to delete a window property\n\t// See stackoverflow.com/questions/1073414/deleting-a-window-property-in-ie/1824228\n\ttry {\n\t\tdelete window.json;\n\t} catch (e) {}\n});\n\nQUnit.module('write', lifecycle);\n\nQUnit.test('String primitive', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', 'v');\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should write value');\n});\n\nQUnit.test('String object', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', new String('v'));\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should write value');\n});\n\nQUnit.test('value \"[object Object]\"', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', '[object Object]');\n\tassert.strictEqual(Cookies.get('c'), '[object Object]', 'should write value');\n});\n\nQUnit.test('number', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', 1234);\n\tassert.strictEqual(Cookies.get('c'), '1234', 'should write value');\n});\n\nQUnit.test('null', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', null);\n\tassert.strictEqual(Cookies.get('c'), 'null', 'should write value');\n});\n\nQUnit.test('undefined', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', undefined);\n\tassert.strictEqual(Cookies.get('c'), 'undefined', 'should write value');\n});\n\nQUnit.test('expires option as days from now', function (assert) {\n\tassert.expect(1);\n\tvar sevenDaysFromNow = new Date();\n\tsevenDaysFromNow.setDate(sevenDaysFromNow.getDate() + 21);\n\tvar expected = 'expires=' + sevenDaysFromNow.toUTCString();\n\tvar actual = Cookies.set('c', 'v', { expires: 21 });\n\tassert.ok(actual.indexOf(expected) !== -1, quoted(actual) + ' includes ' + quoted(expected));\n});\n\n// github.com/carhartl/jquery-cookie/issues/246\nQUnit.test('expires option as fraction of a day', function (assert) {\n\tassert.expect(1);\n\n\tvar findValueForAttributeName = function (createdCookie, attributeName) {\n\t\tvar pairs = createdCookie.split('; ');\n\t\tvar foundAttributeValue;\n\t\tpairs.forEach(function (pair) {\n\t\t\tif (pair.split('=')[0] === attributeName) {\n\t\t\t\tfoundAttributeValue = pair.split('=')[1];\n\t\t\t}\n\t\t});\n\t\treturn foundAttributeValue;\n\t};\n\tvar now = new Date();\n\tvar stringifiedDate = findValueForAttributeName(Cookies.set('c', 'v', { expires: 0.5 }), 'expires');\n\tvar expires = new Date(stringifiedDate);\n\n\t// When we were using Date.setDate() fractions have been ignored\n\t// and expires resulted in the current date. Allow 1000 milliseconds\n\t// difference for execution time because new Date() can be different,\n\t// even when it's run synchronously.\n\t// See https://github.com/js-cookie/js-cookie/commit/ecb597b65e4c477baa2b30a2a5a67fdaee9870ea#commitcomment-20146048.\n\tvar assertion = expires.getTime() > now.getTime() + 1000;\n\tvar message = quoted(expires.getTime()) + ' should be greater than ' + quoted(now.getTime());\n\tassert.ok(assertion, message);\n});\n\nQUnit.test('expires option as Date instance', function (assert) {\n\tassert.expect(1);\n\tvar sevenDaysFromNow = new Date();\n\tsevenDaysFromNow.setDate(sevenDaysFromNow.getDate() + 7);\n\tvar expected = 'expires=' + sevenDaysFromNow.toUTCString();\n\tvar actual = Cookies.set('c', 'v', { expires: sevenDaysFromNow });\n\tassert.ok(actual.indexOf(expected) !== -1, quoted(actual) + ' includes ' + quoted(expected));\n});\n\nQUnit.test('return value', function (assert) {\n\tassert.expect(1);\n\tvar expected = 'c=v';\n\tvar actual = Cookies.set('c', 'v').substring(0, expected.length);\n\tassert.strictEqual(actual, expected, 'should return written cookie string');\n});\n\nQUnit.test('default path attribute', function (assert) {\n\tassert.expect(1);\n\tassert.ok(Cookies.set('c', 'v').match(/path=\\//), 'should read the default path');\n});\n\nQUnit.test('API for changing defaults', function (assert) {\n\tassert.expect(3);\n\n\tCookies.defaults.path = '/foo';\n\tassert.ok(Cookies.set('c', 'v').match(/path=\\/foo/), 'should use attributes from defaults');\n\tCookies.remove('c', { path: '/foo' });\n\n\tassert.ok(Cookies.set('c', 'v', { path: '/bar' }).match(/path=\\/bar/), 'attributes argument has precedence');\n\tCookies.remove('c', { path: '/bar' });\n\n\tdelete Cookies.defaults.path;\n\tassert.ok(Cookies.set('c', 'v').match(/path=\\//), 'should roll back to the default path');\n});\n\nQUnit.test('true secure value', function (assert) {\n\tassert.expect(1);\n\tvar expected = 'c=v; path=/; secure';\n\tvar actual = Cookies.set('c', 'v', {secure: true});\n\tassert.strictEqual(actual, expected, 'should add secure attribute');\n});\n\n// github.com/js-cookie/js-cookie/pull/54\nQUnit.test('false secure value', function (assert) {\n\tassert.expect(1);\n\tvar expected = 'c=v; path=/';\n\tvar actual = Cookies.set('c', 'v', {secure: false});\n\tassert.strictEqual(actual, expected, 'false should not modify path in cookie string');\n});\n\n// github.com/js-cookie/js-cookie/issues/276\nQUnit.test('unofficial attribute', function (assert) {\n\tassert.expect(1);\n\tvar expected = 'c=v; path=/; unofficial=anything';\n\tvar actual = Cookies.set('c', 'v', {\n\t\tunofficial: 'anything'\n\t});\n\tassert.strictEqual(expected, actual, 'should write the cookie string with unofficial attribute');\n});\n\nQUnit.test('undefined attribute value', function (assert) {\n\tassert.expect(5);\n\tassert.strictEqual(Cookies.set('c', 'v', {\n\t\texpires: undefined\n\t}), 'c=v; path=/', 'should not write undefined expires attribute');\n\tassert.strictEqual(Cookies.set('c', 'v', {\n\t\tpath: undefined\n\t}), 'c=v', 'should not write undefined path attribute');\n\tassert.strictEqual(Cookies.set('c', 'v', {\n\t\tdomain: undefined\n\t}), 'c=v; path=/', 'should not write undefined domain attribute');\n\tassert.strictEqual(Cookies.set('c', 'v', {\n\t\tsecure: undefined\n\t}), 'c=v; path=/', 'should not write undefined secure attribute');\n\tassert.strictEqual(Cookies.set('c', 'v', {\n\t\tunofficial: undefined\n\t}), 'c=v; path=/', 'should not write undefined unofficial attribute');\n});\n\nQUnit.module('remove', lifecycle);\n\nQUnit.test('deletion', function (assert) {\n\tassert.expect(1);\n\tCookies.set('c', 'v');\n\tCookies.remove('c');\n\tassert.strictEqual(document.cookie, '', 'should delete the cookie');\n});\n\nQUnit.test('with attributes', function (assert) {\n\tassert.expect(1);\n\tvar attributes = { path: '/' };\n\tCookies.set('c', 'v', attributes);\n\tCookies.remove('c', attributes);\n\tassert.strictEqual(document.cookie, '', 'should delete the cookie');\n});\n\nQUnit.test('passing attributes reference', function (assert) {\n\tassert.expect(1);\n\tvar attributes = { path: '/' };\n\tCookies.set('c', 'v', attributes);\n\tCookies.remove('c', attributes);\n\tassert.deepEqual(attributes, { path: '/' }, 'won\\'t alter attributes object');\n});\n\nQUnit.module('converters', lifecycle);\n\n// github.com/carhartl/jquery-cookie/pull/166\nQUnit.test('provide a way for decoding characters encoded by the escape function', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'c=%u5317%u4eac';\n\tassert.strictEqual(Cookies.withConverter(unescape).get('c'), '北京', 'should convert chinese characters correctly');\n});\n\nQUnit.test('should decode a malformed char that matches the decodeURIComponent regex', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'c=%E3';\n\tvar cookies = Cookies.withConverter(unescape);\n\tassert.strictEqual(cookies.get('c'), 'ã', 'should convert the character correctly');\n\tcookies.remove('c', {\n\t\tpath: ''\n\t});\n});\n\nQUnit.test('should be able to conditionally decode a single malformed cookie', function (assert) {\n\tassert.expect(4);\n\tvar cookies = Cookies.withConverter(function (value, name) {\n\t\tif (name === 'escaped') {\n\t\t\treturn unescape(value);\n\t\t}\n\t});\n\n\tdocument.cookie = 'escaped=%u5317';\n\tassert.strictEqual(cookies.get('escaped'), '北', 'should use a custom method for escaped cookie');\n\n\tdocument.cookie = 'encoded=%E4%BA%AC';\n\tassert.strictEqual(cookies.get('encoded'), '京', 'should use the default encoding for the rest');\n\n\tassert.deepEqual(cookies.get(), {\n\t\tescaped: '北',\n\t\tencoded: '京'\n\t}, 'should retrieve everything');\n\n\tObject.keys(cookies.get()).forEach(function (name) {\n\t\tcookies.remove(name, {\n\t\t\tpath: ''\n\t\t});\n\t});\n\tassert.strictEqual(document.cookie, '', 'should remove everything');\n});\n\n// github.com/js-cookie/js-cookie/issues/70\nQUnit.test('should be able to create a write decoder', function (assert) {\n\tassert.expect(1);\n\tCookies.withConverter({\n\t\twrite: function (value) {\n\t\t\treturn value.replace('+', '%2B');\n\t\t}\n\t}).set('c', '+');\n\tassert.strictEqual(document.cookie, 'c=%2B', 'should call the write converter');\n});\n\nQUnit.test('should be able to use read and write decoder', function (assert) {\n\tassert.expect(1);\n\tdocument.cookie = 'c=%2B';\n\tvar cookies = Cookies.withConverter({\n\t\tread: function (value) {\n\t\t\treturn value.replace('%2B', '+');\n\t\t}\n\t});\n\tassert.strictEqual(cookies.get('c'), '+', 'should call the read converter');\n});\n\nQUnit.module('JSON handling', lifecycle);\n\nQUnit.test('Number', function (assert) {\n\tassert.expect(2);\n\tCookies.set('c', 1);\n\tassert.strictEqual(Cookies.getJSON('c'), 1, 'should handle a Number');\n\tassert.strictEqual(Cookies.get('c'), '1', 'should return a String');\n});\n\nQUnit.test('Boolean', function (assert) {\n\tassert.expect(2);\n\tCookies.set('c', true);\n\tassert.strictEqual(Cookies.getJSON('c'), true, 'should handle a Boolean');\n\tassert.strictEqual(Cookies.get('c'), 'true', 'should return a Boolean');\n});\n\nQUnit.test('Array Literal', function (assert) {\n\tassert.expect(2);\n\tCookies.set('c', ['v']);\n\tassert.deepEqual(Cookies.getJSON('c'), ['v'], 'should handle Array Literal');\n\tassert.strictEqual(Cookies.get('c'), '[\"v\"]', 'should return a String');\n});\n\nQUnit.test('Array Constructor', function (assert) {\n\t/*jshint -W009 */\n\tassert.expect(2);\n\tvar value = new Array();\n\tvalue[0] = 'v';\n\tCookies.set('c', value);\n\tassert.deepEqual(Cookies.getJSON('c'), ['v'], 'should handle Array Constructor');\n\tassert.strictEqual(Cookies.get('c'), '[\"v\"]', 'should return a String');\n});\n\nQUnit.test('Object Literal', function (assert) {\n\tassert.expect(2);\n\tCookies.set('c', {k: 'v'});\n\tassert.deepEqual(Cookies.getJSON('c'), {k: 'v'}, 'should handle Object Literal');\n\tassert.strictEqual(Cookies.get('c'), '{\"k\":\"v\"}', 'should return a String');\n});\n\nQUnit.test('Object Constructor', function (assert) {\n\t/*jshint -W010 */\n\tassert.expect(2);\n\tvar value = new Object();\n\tvalue.k = 'v';\n\tCookies.set('c', value);\n\tassert.deepEqual(Cookies.getJSON('c'), {k: 'v'}, 'should handle Object Constructor');\n\tassert.strictEqual(Cookies.get('c'), '{\"k\":\"v\"}', 'should return a String');\n});\n\nQUnit.test('Use String(value) for unsupported objects that do not stringify into JSON', function (assert) {\n\tassert.expect(2);\n\tCookies.set('date', new Date(2015, 4, 13, 0, 0, 0, 0));\n\tassert.strictEqual(Cookies.get('date').indexOf('\"'), -1, 'should not quote the stringified Date object');\n\tassert.strictEqual(Cookies.getJSON('date').indexOf('\"'), -1, 'should not quote the stringified Date object');\n});\n\nQUnit.test('Call to read all cookies with mixed json', function (assert) {\n\tCookies.set('c', { foo: 'bar' });\n\tCookies.set('c2', 'v');\n\tassert.deepEqual(Cookies.getJSON(), { c: { foo: 'bar' }, c2: 'v' }, 'returns JSON parsed cookies');\n\tassert.deepEqual(Cookies.get(), { c: '{\"foo\":\"bar\"}', c2: 'v' }, 'returns unparsed cookies');\n});\n\nQUnit.module('noConflict', lifecycle);\n\nQUnit.test('do not conflict with existent globals', function (assert) {\n\tassert.expect(2);\n\tvar Cookies = window.Cookies.noConflict();\n\tCookies.set('c', 'v');\n\tassert.strictEqual(Cookies.get('c'), 'v', 'should work correctly');\n\tassert.strictEqual(window.Cookies, 'existent global', 'should restore the original global');\n\twindow.Cookies = Cookies;\n});\n"]}