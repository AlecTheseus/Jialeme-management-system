{"version":3,"sources":["encoding.js"],"names":[],"mappings":"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","file":"encoding-compiled.js","sourcesContent":["QUnit.module('cookie-value', lifecycle);\n\nQUnit.test('cookie-value with double quotes', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('c', '\"')\n\t.then(function (decodedValue) {\n\t\tassert.strictEqual(decodedValue, '\"', 'should print the quote character');\n\t});\n});\n\nQUnit.test('cookie-value with double quotes in the left', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('c', '\"content')\n\t.then(function (decodedValue) {\n\t\tassert.strictEqual(decodedValue, '\"content', 'should print the quote character');\n\t});\n});\n\nQUnit.test('cookie-value with double quotes in the right', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('c', 'content\"')\n\t.then(function (decodedValue) {\n\t\tassert.strictEqual(decodedValue, 'content\"', 'should print the quote character');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-value \" \"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ' ')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ' ', 'should handle the whitespace character');\n\t\tassert.strictEqual(plainValue, 'c=%20', 'whitespace is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-value \",\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ',')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ',', 'should handle the comma character');\n\t\tassert.strictEqual(plainValue, 'c=%2C', 'comma is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-value \";\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ';')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ';', 'should handle the semicolon character');\n\t\tassert.strictEqual(plainValue, 'c=%3B', 'semicolon is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-value \"\\\\\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '\\\\')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '\\\\', 'should handle the backslash character');\n\t\tassert.strictEqual(plainValue, 'c=%5C', 'backslash is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - characters not allowed in the cookie-value should be replaced globally', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ';;')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ';;', 'should handle multiple not allowed characters');\n\t\tassert.strictEqual(plainValue, 'c=%3B%3B', 'should replace multiple not allowed characters');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"#\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '#')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '#', 'should handle the sharp character');\n\t\tassert.strictEqual(plainValue, 'c=#', 'sharp is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"$\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '$')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '$', 'should handle the dollar sign character');\n\t\tassert.strictEqual(plainValue, 'c=$', 'dollar sign is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"%\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '%')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '%', 'should handle the percent character');\n\t\tassert.strictEqual(plainValue, 'c=%25', 'percent is allowed, but need to be escaped');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"&\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '&')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '&', 'should handle the ampersand character');\n\t\tassert.strictEqual(plainValue, 'c=&', 'ampersand is allowed, should not encode');\n\t});\n});\n\n// github.com/carhartl/jquery-cookie/pull/62\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"+\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '+')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '+', 'should handle the plus character');\n\t\tassert.strictEqual(plainValue, 'c=+', 'plus is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \":\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ':')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ':', 'should handle the colon character');\n\t\tassert.strictEqual(plainValue, 'c=:', 'colon is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"<\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '<')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '<', 'should handle the less-than character');\n\t\tassert.strictEqual(plainValue, 'c=<', 'less-than is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \">\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '>')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '>', 'should handle the greater-than character');\n\t\tassert.strictEqual(plainValue, 'c=>', 'greater-than is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"=\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '=')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '=', 'should handle the equal sign character');\n\t\tassert.strictEqual(plainValue, 'c==', 'equal sign is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"/\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '/')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '/', 'should handle the slash character');\n\t\tassert.strictEqual(plainValue, 'c=/', 'slash is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"?\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '?')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '?', 'should handle the question mark character');\n\t\tassert.strictEqual(plainValue, 'c=?', 'question mark is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"@\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '@')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '@', 'should handle the at character');\n\t\tassert.strictEqual(plainValue, 'c=@', 'at is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"[\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '[')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '[', 'should handle the opening square bracket character');\n\t\tassert.strictEqual(plainValue, 'c=[', 'opening square bracket is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"]\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', ']')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, ']', 'should handle the closing square bracket character');\n\t\tassert.strictEqual(plainValue, 'c=]', 'closing square bracket is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"^\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '^')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '^', 'should handle the caret character');\n\t\tassert.strictEqual(plainValue, 'c=^', 'caret is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"`\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '`')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '`', 'should handle the grave accent character');\n\t\tassert.strictEqual(plainValue, 'c=`', 'grave accent is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"{\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '{')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '{', 'should handle the opening curly bracket character');\n\t\tassert.strictEqual(plainValue, 'c={', 'opening curly bracket is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"}\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '}')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '}', 'should handle the closing curly bracket character');\n\t\tassert.strictEqual(plainValue, 'c=}', 'closing curly bracket is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-value \"|\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '|')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '|', 'should handle the pipe character');\n\t\tassert.strictEqual(plainValue, 'c=|', 'pipe is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - characters allowed in the cookie-value should globally not be encoded', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('c', '{{')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(plainValue, 'c={{', 'should not encode all the character occurrences');\n\t});\n});\n\nQUnit.test('cookie-value - 2 bytes character (ã)', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', 'ã')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'ã', 'should handle the ã character');\n\t\tassert.strictEqual(plainValue, 'c=%C3%A3', 'should encode the ã character');\n\t});\n});\n\nQUnit.test('cookie-value - 3 bytes character (₯)', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '₯')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '₯', 'should handle the ₯ character');\n\t\tassert.strictEqual(plainValue, 'c=%E2%82%AF', 'should encode the ₯ character');\n\t});\n});\n\nQUnit.test('cookie-value - 4 bytes character (𩸽)', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('c', '𩸽')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, '𩸽', 'should handle the 𩸽 character');\n\t\tassert.strictEqual(plainValue, 'c=%F0%A9%B8%BD', 'should encode the 𩸽 character');\n\t});\n});\n\nQUnit.module('cookie-name', lifecycle);\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"(\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('(', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the opening parens character');\n\t\tassert.strictEqual(plainValue, '%28=v', 'opening parens is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \")\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(')', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the closing parens character');\n\t\tassert.strictEqual(plainValue, '%29=v', 'closing parens is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - should replace parens globally', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('(())', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(plainValue, '%28%28%29%29=v', 'encode with global replace');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"<\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('<', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the less-than character');\n\t\tassert.strictEqual(plainValue, '%3C=v', 'less-than is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \">\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('>', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the greater-than character');\n\t\tassert.strictEqual(plainValue, '%3E=v', 'greater-than is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"@\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('@', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the at character');\n\t\tassert.strictEqual(plainValue, '%40=v', 'at is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \",\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(',', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the comma character');\n\t\tassert.strictEqual(plainValue, '%2C=v', 'comma is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \";\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(';', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the semicolon character');\n\t\tassert.strictEqual(plainValue, '%3B=v', 'semicolon is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \":\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(':', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the colon character');\n\t\tassert.strictEqual(plainValue, '%3A=v', 'colon is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"\\\\\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('\\\\', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the backslash character');\n\t\tassert.strictEqual(plainValue, '%5C=v', 'backslash is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"\\\"\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('\"', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the double quote character');\n\t\tassert.strictEqual(plainValue, '%22=v', 'double quote is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"/\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('/', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the slash character');\n\t\tassert.strictEqual(plainValue, '%2F=v', 'slash is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"[\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('[', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the opening square brackets character');\n\t\tassert.strictEqual(plainValue, '%5B=v', 'opening square brackets is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"]\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(']', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the closing square brackets character');\n\t\tassert.strictEqual(plainValue, '%5D=v', 'closing square brackets is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"?\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('?', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the question mark character');\n\t\tassert.strictEqual(plainValue, '%3F=v', 'question mark is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"=\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('=', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the equal sign character');\n\t\tassert.strictEqual(plainValue, '%3D=v', 'equal sign is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"{\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('{', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the opening curly brackets character');\n\t\tassert.strictEqual(plainValue, '%7B=v', 'opening curly brackets is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"}\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('}', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the closing curly brackets character');\n\t\tassert.strictEqual(plainValue, '%7D=v', 'closing curly brackets is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \"\\\\t\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('\t', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the horizontal tab character');\n\t\tassert.strictEqual(plainValue, '%09=v', 'horizontal tab is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character not allowed in the cookie-name \" \"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie(' ', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the whitespace character');\n\t\tassert.strictEqual(plainValue, '%20=v', 'whitespace is not allowed, need to encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"#\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('#', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the sharp character');\n\t\tassert.strictEqual(plainValue, '#=v', 'sharp is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"$\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('$', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the dollar sign character');\n\t\tassert.strictEqual(plainValue, '$=v', 'dollar sign is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in cookie-name \"%\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('%', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the percent character');\n\t\tassert.strictEqual(plainValue, '%25=v', 'percent is allowed, but need to be escaped');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"&\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('&', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the ampersand character');\n\t\tassert.strictEqual(plainValue, '&=v', 'ampersand is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"+\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('+', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the plus character');\n\t\tassert.strictEqual(plainValue, '+=v', 'plus is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"^\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('^', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the caret character');\n\t\tassert.strictEqual(plainValue, '^=v', 'caret is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"`\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('`', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the grave accent character');\n\t\tassert.strictEqual(plainValue, '`=v', 'grave accent is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - character allowed in the cookie-name \"|\"', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('|', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the pipe character');\n\t\tassert.strictEqual(plainValue, '|=v', 'pipe is allowed, should not encode');\n\t});\n});\n\nQUnit.test('RFC 6265 - characters allowed in the cookie-name should globally not be encoded', function (assert) {\n\tassert.expect(1);\n\tusing(assert)\n\t.setCookie('||', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(plainValue, '||=v', 'should not encode all character occurrences');\n\t});\n});\n\nQUnit.test('cookie-name - 2 bytes characters', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('ã', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the ã character');\n\t\tassert.strictEqual(plainValue, '%C3%A3=v', 'should encode the ã character');\n\t});\n});\n\nQUnit.test('cookie-name - 3 bytes characters', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('₯', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should handle the ₯ character');\n\t\tassert.strictEqual(plainValue, '%E2%82%AF=v', 'should encode the ₯ character');\n\t});\n});\n\nQUnit.test('cookie-name - 4 bytes characters', function (assert) {\n\tassert.expect(2);\n\tusing(assert)\n\t.setCookie('𩸽', 'v')\n\t.then(function (decodedValue, plainValue) {\n\t\tassert.strictEqual(decodedValue, 'v', 'should_handle the 𩸽 character');\n\t\tassert.strictEqual(plainValue, '%F0%A9%B8%BD=v', 'should encode the 𩸽 character');\n\t});\n});\n"]}