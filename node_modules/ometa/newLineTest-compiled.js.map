{"version":3,"sources":["newLineTest.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,KAAR,CAAV;AAAA,IACI,KAAK,QAAQ,IAAR,CADT;AAAA,IAEI,QAAQ,QAAQ,YAAY,WAApB,CAFZ;AAGI,aAAa,8DAAb;;AAEJ,IAAI,QAAQ,SAAR,KAAQ,CAAS,OAAT,EAAkB,aAAlB,EAAiC,IAAjC,EAAuC;AACjD,QAAM,YAAN,CAAmB,OAAnB,EAA4B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAChD,QAAG,GAAH,EAAQ;AACN,UAAI,IAAJ,CAAS,IAAI,KAAJ,CAAU,QAAV,EAAT;AACD,KAFD,MAEO;AACL,aAAO,KAAP,CAAa,mBAAb,EAAkC,GAAlC,EAAuC,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC3D,YAAG,GAAH,EAAQ;AACN,kBAAQ,GAAR,CAAY,GAAZ;AACD,SAFD,MAEO;AACL,kBAAQ,GAAR,CAAY,MAAZ;AACD;AACF,OAND;AAOD;AACF,GAZD;AAaD,CAdD;;AAgBA,IAAI,UAAU,SAAV,OAAU,GAAW;AACvB,MAAI,UAAU,GAAG,YAAH,CAAgB,YAAY,uBAA5B,EAAqD,MAArD,CAAd;AAAA,MACI,OAAO,QAAQ,KAAR,CAAc,CAAd,EAAiB,OAAjB,CAAyB,MAAzB,EAAiC,IAAjC,CADX;AAAA,MAEI,WAAW,KAAK,MAAL,IAAe,WAAW,MAA1B,GAAmC,KAAK,MAAxC,GAAiD,WAAW,MAF3E;AAAA,MAGI,CAHJ;AAIA,QAAM,IAAN;AACA,OAAI,IAAI,CAAR,EAAW,IAAI,QAAf,EAAyB,KAAK,CAA9B,EAAiC;AAC/B,YAAQ,GAAR,CAAY,KAAK,CAAL,IAAU,MAAV,GAAmB,WAAW,CAAX,CAA/B;AACD;AACF,CATD;;AAWA,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB;AACA,MAAM,UAAN;AACA","file":"newLineTest-compiled.js","sourcesContent":["var sys = require('sys'),\n    fs = require('fs'),\n    ometa = require(__dirname + '/index.js');\n    rawGrammar = \"ometa T <: Parser { t = '\\n' -> 'wtf', a = (t | anything)* }\";\n\nvar parse = function(grammar, stringToParse, rule) {\n  ometa.createParser(grammar, function(err, parser) {\n    if(err) {\n      sys.puts(err.inner.toString());\n    } else {\n      parser.parse('ican\\'t\\ndothis\\n', 'a', function(err, result) {\n        if(err) {\n          console.log(err);\n        } else {\n          console.log(result);\n        }\n      });\n    }\n  });\n};\n\nvar compare = function() {\n  var rawFile = fs.readFileSync(__dirname + '/newLineGrammar.ometa', 'utf8'),\n      file = rawFile.slice(1).replace(/\\\\n/g, '\\n'),\n      maxChars = file.length >= rawGrammar.length ? file.length : rawGrammar.length,\n      i;\n  parse(file);\n  for(i = 0; i < maxChars; i += 1) {\n    console.log(file[i] + ' :: ' + rawGrammar[i]);\n  }\n};\n\nmodule.exports.parse = parse;\nparse(rawGrammar);\ncompare();\n"]}