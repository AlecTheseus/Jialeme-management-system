{"version":3,"sources":["prototype-fix.js"],"names":[],"mappings":"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","file":"prototype-fix-compiled.js","sourcesContent":["// Override prototype.js' Ajax\n\n// To allow PUT and PROPFIND method\n\nAjax.Request.prototype.request = function(url) {\n    this.url = url;\n    this.method = this.options.method;\n    var params = Object.clone(this.options.parameters);\n\n    if (!['get', 'post', 'put', 'propfind'].include(this.method)) {\n//    if (!['get', 'post'].include(this.method)) {\n      // simulate other verbs over post\n      params['_method'] = this.method;\n      this.method = 'post';\n    }\n\n    this.parameters = params;\n\n    if (params = Hash.toQueryString(params)) {\n      // when GET, append parameters to URL\n      if (this.method == 'get')\n        this.url += (this.url.include('?') ? '&' : '?') + params;\n      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))\n        params += '&_=';\n    }\n\n    try {\n      if (this.options.onCreate) this.options.onCreate(this.transport);\n      Ajax.Responders.dispatch('onCreate', this, this.transport);\n\n      this.transport.open(this.method.toUpperCase(), this.url,\n        this.options.asynchronous);\n\n      if (this.options.asynchronous)\n        setTimeout(function() { this.respondToReadyState(1) }.bind(this), 10);\n\n      this.transport.onreadystatechange = this.onStateChange.bind(this);\n      this.setRequestHeaders();\n\n      this.body = (['post', 'put'].include(this.method)) ? (this.options.postBody || params) : null;\n      this.transport.send(this.body);\n\n      /* Force Firefox to handle ready state 4 for synchronous requests */\n      if (!this.options.asynchronous && this.transport.overrideMimeType)\n        this.onStateChange();\n\n    }\n    catch (e) {\n      this.dispatchException(e);\n    }\n}\n\n// To avoid properties added to Object by ometa.\n\nAjax.Request.prototype.setRequestHeaders = function(url) {\n    var headers = {\n      'X-Requested-With': 'XMLHttpRequest',\n      'X-Prototype-Version': Prototype.Version,\n      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'\n    };\n\n    if (this.method == 'post') {\n      headers['Content-type'] = this.options.contentType +\n        (this.options.encoding ? '; charset=' + this.options.encoding : '');\n\n      /* Force \"Connection: close\" for older Mozilla browsers to work\n       * around a bug where XMLHttpRequest sends an incorrect\n       * Content-length header. See Mozilla Bugzilla #246651.\n       */\n      if (this.transport.overrideMimeType &&\n          (navigator.userAgent.match(/Gecko\\/(\\d{4})/) || [0,2005])[1] < 2005)\n            headers['Connection'] = 'close';\n    }\n\n    // user-defined headers\n    if (typeof this.options.requestHeaders == 'object') {\n      var extras = this.options.requestHeaders;\n\n      if (typeof extras.push == 'function')\n        for (var i = 0, length = extras.length; i < length; i += 2)\n          headers[extras[i]] = extras[i+1];\n      else\n        $H(extras).each(function(pair) { headers[pair.key] = pair.value });\n    }\n\n    for (var name in headers) {\n      if (typeof headers[name] == \"string\") {\n        this.transport.setRequestHeader(name, headers[name]);\n      }\n    }\n}\n"]}