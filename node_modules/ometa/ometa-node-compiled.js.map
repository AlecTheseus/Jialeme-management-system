{"version":3,"sources":["ometa-node.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,OAAR,CAAV;AACA,QAAQ,cAAR;AACA,QAAQ,UAAR;AACA,QAAQ,kBAAR;AACA,QAAQ,qBAAR;AACA,QAAQ,sBAAR;AACA,QAAQ,wBAAR;;AAEA,IAAI,gBAAgB,SAAhB,aAAgB,CAAS,CAAT,EAAY;AAC9B,MAAI,mBAAmB,SAAnB,gBAAmB,CAAS,CAAT,EAAY,CAAZ,EAAe;AAAE,UAAM,kDAAN,EAA2D,MAAM,IAAN;AAAY,GAA/G;AAAA,MACI,OAAmB,gBAAgB,QAAhB,CAAyB,CAAzB,EAA4B,UAA5B,EAAwC,SAAxC,EAAmD,UAAS,CAAT,EAAY,CAAZ,EAAe;AAAE,UAAM,sBAAsB,IAAtB,EAA4B,EAAC,UAAU,CAAX,EAA5B,CAAN;AAAkD,GAAtH,CADvB;AAEA,SAAO,oBAAoB,KAApB,CAA0B,IAA1B,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,gBAApD,CAAP;AACD,CAJD;;AAMA,IAAI,QAAQ,SAAR,KAAQ,CAAS,aAAT,EAAwB;AAClC,MAAI,SAAS,KAAK,cAAc,aAAd,CAAL,CAAb;AACA,SAAO,UAAS,aAAT,EAAwB,IAAxB,EAA8B;AACnC,WAAO,KAAK,OAAO,QAAP,CAAgB,aAAhB,EAA+B,IAA/B,CAAL,CAAP;AACD,GAFD;AAGD,CALD;;AAQA,OAAO,OAAP,GAAiB,KAAjB","file":"ometa-node-compiled.js","sourcesContent":["var lib = require(\"./lib\");\nrequire(\"./ometa-base\")\nrequire(\"./parser\")\nrequire(\"./bs-js-compiler\")\nrequire(\"./bs-ometa-compiler\")\nrequire(\"./bs-ometa-optimizer\")\nrequire(\"./bs-ometa-js-compiler\")\n\nvar translateCode = function(s) {\n  var translationError = function(m, i) { alert(\"Translation error - please tell Alex about this!\"); throw fail },\n      tree             = BSOMetaJSParser.matchAll(s, \"topLevel\", undefined, function(m, i) { throw objectThatDelegatesTo(fail, {errorPos: i}) })\n  return BSOMetaJSTranslator.match(tree, \"trans\", undefined, translationError)\n}\n\nvar parse = function(grammarString) {\n  var parser = eval(translateCode(grammarString));\n  return function(stringToParse, rule) {\n    return eval(parser.matchAll(stringToParse, rule));\n  };\n};\n\n\nmodule.exports = parse;\n"]}