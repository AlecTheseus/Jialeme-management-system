{"version":3,"sources":["ometa-rhino.js"],"names":[],"mappings":"AAAA,KAAK,QAAL;AACA,KAAK,eAAL;AACA,KAAK,WAAL;AACA,KAAK,mBAAL;AACA,KAAK,sBAAL;AACA,KAAK,uBAAL;AACA,KAAK,yBAAL;;AAEA,QAAQ,KAAR;;AAEA,gBAAgB,uBAAS,CAAT,EAAY;AAC1B,MAAI,mBAAmB,SAAnB,gBAAmB,CAAS,CAAT,EAAY,CAAZ,EAAe;AAAE,UAAM,kDAAN,EAA2D,MAAM,IAAN;AAAY,GAA/G;AAAA,MACI,OAAmB,gBAAgB,QAAhB,CAAyB,CAAzB,EAA4B,UAA5B,EAAwC,SAAxC,EAAmD,UAAS,CAAT,EAAY,CAAZ,EAAe;AACb,UAAM,sBAAsB,IAAtB,EAA4B,EAAC,UAAU,CAAX,EAA5B,CAAN;AAAkD,GADvG,CADvB;AAGA,SAAO,oBAAoB,KAApB,CAA0B,IAA1B,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,gBAApD,CAAP;AACD,CALD;;AAOA,QAAQ,eAAS,CAAT,EAAY;AAAE,SAAO,KAAK,cAAc,CAAd,CAAL,CAAP;AAA+B,CAArD","file":"ometa-rhino-compiled.js","sourcesContent":["load(\"lib.js\")\nload(\"ometa-base.js\")\nload(\"parser.js\")\nload(\"bs-js-compiler.js\")\nload(\"bs-ometa-compiler.js\")\nload(\"bs-ometa-optimizer.js\")\nload(\"bs-ometa-js-compiler.js\")\n\nalert = print\n\ntranslateCode = function(s) {\n  var translationError = function(m, i) { alert(\"Translation error - please tell Alex about this!\"); throw fail },\n      tree             = BSOMetaJSParser.matchAll(s, \"topLevel\", undefined, function(m, i) {\n                                                                              throw objectThatDelegatesTo(fail, {errorPos: i}) })\n  return BSOMetaJSTranslator.match(tree, \"trans\", undefined, translationError)\n}\n\nometa = function(s) { return eval(translateCode(s)) }\n\n"]}